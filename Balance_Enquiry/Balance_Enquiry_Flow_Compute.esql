
DECLARE Config_File EXTERNAL CHARACTER '';
CREATE COMPUTE MODULE Balance_Enquiry_Flow_Compute
	DECLARE rc BOOLEAN;
CREATE FUNCTION Main() RETURNS BOOLEAN
BEGIN 
CALL initLog(Config_File)INTO rc;
CALL CopyEntireMessage();
RETURN TRUE;
END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN
DECLARE i BLOB;
		DECLARE ch CHARACTER;
		SET ch= CAST (ASBITSTREAM(InputRoot.BLOB.BLOB  CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId); 
		IF (CONTAINS( ch , '>')) THEN 
			CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC') PARSE(InputRoot.BLOB.BLOB);
			SET OutputRoot=ch;
			ELSEIF (CONTAINS( ch , '}')) THEN
		CREATE LASTCHILD OF OutputRoot DOMAIN ('JSON') PARSE(InputRoot.BLOB.BLOB);
		SET OutputRoot=ch;
		END IF;
		
CALL writerToLogFile(MessageFlowLabel,'ACE','INFO','========================== REQUEST RECEIVED===============')INTO rc;
DECLARE data CHARACTER CAST(ASBITSTREAM(InputRoot CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
CALL writerToLogFile(MessageFlowLabel,'ACE','INFO',data) INTO rc;
CALL writerToLogFile(MessageFlowLabel,'ACE','DEBUG','=================== ENG ======================')INTO rc;

CALL writerToLogFile(MessageFlowLabel,'ACE','INFO','========================== RESPONCE RECEIVED===============')INTO rc;
DECLARE responce CHARACTER CAST(ASBITSTREAM(OutputRoot CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId );
CALL writerToLogFile(MessageFlowLabel,'ACE','INFO',responce) INTO rc;
END;

CREATE FUNCTION initLog(IN Config_File CHARACTER) RETURNS BOOLEAN
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";

CREATE FUNCTION writerToLogFile (IN COMPONENT_NAME CHARACTER,IN LOGGER_NAME CHARACTER,IN LEVEL CHARACTER,IN TEXT CHARACTER ) RETURNS BOOLEAN
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";
END MODULE;




